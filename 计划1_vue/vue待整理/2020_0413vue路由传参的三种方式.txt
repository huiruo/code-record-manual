


//----------第一种方法 页面刷新数据不会丢失
methods：{
  insurance(id) {
       //直接调用$router.push 实现携带参数的跳转
        this.$router.push({
          path: `/particulars/${id}`,
        })
}


需要对应路由配置如下：
{
  path: '/particulars/:id',
  name: 'particulars',
  component: particulars
}

另外页面获取参数如下:
this.$route.params.id


//-----------第二种方法 页面刷新数据会丢失
methods：{
  insurance(id) {
       this.$router.push({
          name: 'particulars',
          params: {
            id: id
          }
        })
  }

对应路由配置: 注意这里不能使用:/id来传递参数了，因为组件中，已经使用params来携带参数了。
{
     path: '/particulars',
     name: 'particulars',
     component: particulars
}


子组件中: 这样来获取参数
this.$route.params.id


//-----------第三种方法
使用path来匹配路由，然后通过query来传递参数
这种情况下 query传递的参数会显示在url后面?id=？


methods：{
  insurance(id) {
        this.$router.push({
          path: '/particulars',
          query: {
            id: id
          }
        })
  }


对应路由配置：
{
     path: '/particulars',
     name: 'particulars',
     component: particulars
   }
对应子组件: 这样来获取参数
this.$route.query.id

//----------------1
跳转1：

      getDescribe(id) {
      //直接调用$router.push 实现携带参数的跳转
        this.$router.push({
          path: `/describe/${id}`,
        })
配置：
 {
     path: '/describe/:id',
     name: 'Describe',
     component: Describe
   }
读取：
很显然，需要在path中添加/:id来对应 $router.push 中path携带的参数。在子组件中可以使用来获取传递的参数值。
this.$route.params.id

//----------------2
跳转2：
父组件中：通过路由属性中的name来确定匹配的路由，通过params来传递参数。
       this.$router.push({
          name: 'Describe',
          params: {
            id: id
          }
        })
//配置：
对应路由配置: 注意这里不能使用:/id来传递参数了，因为父组件中，已经使用params来携带参数了。
{
     path: '/describe',
     name: 'Describe',
     component: Describe
   }
//读取：this.$route.params.id

//----------------3
跳转2：
父组件：使用path来匹配路由，然后通过query来传递参数
这种情况下 query传递的参数会显示在url后面?id=？
this.$router.push({
          path: '/describe',
          query: {
            id: id
          }
})
对应路由配置：

   {
     path: '/describe',
     name: 'Describe',
     component: Describe
   }
读取：this.$route.query.id

              <li :class='active==="1"?"actived":""' @click="getValue('全部','1')">全部</li>
              <li :class='active==="2"?"actived":""' @click="getValue('可用','2')">可用{{active}}</li>
              <li :class='active==="3"?"actived":""' @click="getValue('使用记录','3')">使用记录</li>
              <li :class='active==="4"?"actived":""' @click="getValue('已过期','4')">已过期</li>




